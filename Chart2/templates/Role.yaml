apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: emp-role
  namespace: dev
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list"]

# see in CSR file
    # create a new user <emp>
    # create a private key:    openssl genrsa -out emp.key 2048
    # create a CSR :    openssl req -new -key emp.key -out emp.csr -subj "/CN=emp/O=dev"
    # CN=emp > common name, username
    # O=dev > Organization, groupname
    # sign the CSR to get certificate:  openssl x509 -req -in emp.csr -CA /path/to/ca.crt /path/to/ca.key -CAcreateserial -out emp.crt -days 365

    #set context and credentials:  kubectl config set-credentials emp --client-certificate=emp.crt --client-key=emp.key
    # kubectl config set-context dev-ctx --cluster=minikube --namespace=dev --user=emp

                                   # create role > rolebindings

# kubectl --context=dev-ctx run nginx --image=nginx --restart=Never --namespace=dev
# kubectl --context=dev-ctx get pods -o wide
# kubectl --context=dev-ctx get pods -n default  >> return forbidden
